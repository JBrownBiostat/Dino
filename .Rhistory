devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
usethis::use_vignette("Dino-vignette")
?devtools::install_github
devtools::install_github('JBrownBiostat/Dino')
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
devtools::document()
devtools::document()
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
devtools::document()
devtools::document()
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
library(Dino)
BiocManager::install("BiocStyle")
devtools::install_github('satijalab/seurat-data')
library(SeuratData)
InstallData("pbmc3k")
data("pbmc3k")
?library
temp <- Dino(pbmc3k, nCores = 8)
class(pbmc3k)
getwd()
?download.file
download.file("https://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz",
"../VignetteData/PBMC3K.tar.gz")
?untar
system("mkdir ../VignetteData")
untar("../VignetteData/PBMC3K.tar.gz",
"../VignetteData/PBMC3K_umiMatrices")
untar("../VignetteData/PBMC3K.tar.gz",
"../VignetteData/PBMC3K_umiMatrices/")
untar("../VignetteData/PBMC3K.tar.gz")
untar("../VignetteData/PBMC3K.tar.gz",
exdir = "../VignetteData/PBMC3K_umiMatrices")
untar("../VignetteData/PBMC3K.tar.gz",
exdir = "../VignetteData")
untar("../VignetteData/PBMC3K.tar.gz",
exdir = "../VignetteData/PBMC3K_umiMatrices")
library(Seurat)
?Read10X
pbmc3K <- Read10X("../VignetteData/PBMC3K_umiMatrices/filtered_gene_bc_matrices")
pbmc3K <- Read10X("../VignetteData/PBMC3K_umiMatrices/filtered_gene_bc_matrices/hg19")
dim(pbmc3K)
rm(pbmc3K)
pbmc3k <- Read10X("../VignetteData/PBMC3K_umiMatrices/filtered_gene_bc_matrices/hg19")
pbmc3k <- pbmc3k[rowSums(pbmc3k != 0) >= 10, ]
library(Matrix)
pbmc3k <- pbmc3k[rowSums(pbmc3k != 0) >= 10, ]
print(dim(pbmc3k))
library(Dino)
?Dino
norm1 <- Dino(pbmc3k, nCores = 4)
norm2 <- Dino(pbmc3k, nCores = 4)
norm1[1:5, 1:5]
norm2[1:5, 1:5]
norm1 <- Dino(pbmc3k, nCores = 1)
norm2 <- Dino(pbmc3k, nCores = 1)
norm1[1:5, 1:5]
norm2[1:5, 1:5]
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pbmc3k_Norm <- norm1
?invisible
invisible(capture.output(pbmc3k_Norm <- Dino(pbmc3k, nCores = 4)))
?vignette
vignette(package = "Dino")
?FindVariableFeatures
pbmc3k_Seurat <- SeuratFromDino(pbmc3k_Norm, doNorm = F)
pbmc3k_Seurat <- ScaleData(pbmc3k_Seurat, features = all.genes)
?ScaleData
pbmc3k_Seurat <- FindVariableFeatures(pbmc3k_Seurat, selection.method = "mvp", nfeatures = 1000)
VariableFeaturePlot(pbmc)
VariableFeaturePlot(pbmcek_Seurat)
VariableFeaturePlot(pbmc3k_Seurat)
pbmc3k_Seurat <- ScaleData(pbmc3k_Seurat, features = rownames(pbmc3k_Norm))
pbmc3k_Seurat <- RunPCA(pbmc3k_Seurat, features = VariableFeatures(object = pbmc3k_Seurat))
?RunPCA
pbmc3k_Seurat <- RunPCA(pbmc3k_Seurat,
features = VariableFeatures(object = pbmc3k_Seurat),
verbose = F)
DimPlot(pbmc3k_Seurat, reduction = "pca")
?RunPCA
pbmc3k_Seurat <- RunUMAP(pbmc3k_Seurat, dims = 1:10)
pbmc3k_Seurat <- FindVariableFeatures(pbmc3k_Seurat,
selection.method = "mvp",
nfeatures = 1000)
pbmc3k_Seurat <- ScaleData(pbmc3k_Seurat,
features = rownames(pbmc3k_Norm))
pbmc3k_Seurat <- RunPCA(pbmc3k_Seurat,
features = VariableFeatures(object = pbmc3k_Seurat),
verbose = F)
pbmc3k_Seurat <- FindNeighbors(pbmc3k_Seurat, dims = 1:10)
pbmc3k_Seurat <- FindClusters(pbmc3k_Seurat, resolution = 0.5)
pbmc3k_Seurat <- RunUMAP(pbmc3k_Seurat, dims = 1:10)
DimPlot(pbmc3k_Seurat, reduction = "umap")
pbmc3k_Seurat <- FindVariableFeatures(pbmc3k_Seurat,
selection.method = "mvp",
nfeatures = 2000)
pbmc3k_Seurat <- ScaleData(pbmc3k_Seurat,
features = rownames(pbmc3k_Norm))
pbmc3k_Seurat <- RunPCA(pbmc3k_Seurat,
features = VariableFeatures(object = pbmc3k_Seurat),
verbose = F)
pbmc3k_Seurat <- FindNeighbors(pbmc3k_Seurat, dims = 1:10)
pbmc3k_Seurat <- FindClusters(pbmc3k_Seurat, resolution = 0.5)
pbmc3k_Seurat <- RunUMAP(pbmc3k_Seurat, dims = 1:10)
DimPlot(pbmc3k_Seurat, reduction = "umap")
pbmc3k_Seurat <- FindNeighbors(pbmc3k_Seurat, dims = 1:15)
pbmc3k_Seurat <- FindClusters(pbmc3k_Seurat, resolution = 0.5)
pbmc3k_Seurat <- RunUMAP(pbmc3k_Seurat, dims = 1:15)
DimPlot(pbmc3k_Seurat, reduction = "umap")
?FindClusters
counts <- pbmc3k; rownames(counts) <- NULL
sce <- SingleCellExperiment(list(counts = counts))
sce <- computeSumFactors(sce)
scranSizes <- sizeFactors(sce)
library(scran)
counts <- pbmc3k; rownames(counts) <- NULL
sce <- SingleCellExperiment(list(counts = counts))
sce <- computeSumFactors(sce)
scranSizes <- sizeFactors(sce)
?Dino
summary(scranSizes)
pbmc3k_SNorm <- Dino(pbmc3k, nCores = 4, depth = log(scranSizes))
pbmc3k_Seurat <- SeuratFromDino(pbmc3k_SNorm, doNorm = F)
# Cluster pbmc3k_Seurat
pbmc3k_Seurat <- FindVariableFeatures(pbmc3k_Seurat,
selection.method = "mvp",
nfeatures = 1000)
pbmc3k_Seurat <- ScaleData(pbmc3k_Seurat,
features = rownames(pbmc3k_Norm))
pbmc3k_Seurat <- RunPCA(pbmc3k_Seurat,
features = VariableFeatures(object = pbmc3k_Seurat),
verbose = F)
pbmc3k_Seurat <- FindNeighbors(pbmc3k_Seurat, dims = 1:10)
pbmc3k_Seurat <- FindClusters(pbmc3k_Seurat, resolution = 0.5, verbose = F)
pbmc3k_Seurat <- RunUMAP(pbmc3k_Seurat, dims = 1:10)
DimPlot(pbmc3k_Seurat, reduction = "umap")
?usethis
?usethis::use_package
usethis::use_package("BiocStyle", type = "Suggests")
usethis::use_package("Seurat", type = "Suggests")
usethis::use_package("Matrix", type = "Suggests")
usethis::use_package("scran", type = "Suggests")
usethis::use_package("BiocParallel", type = "Imports")
usethis::use_package("BiocSingular", type = "Imports")
usethis::use_package("Matrix", type = "Imports")
usethis::use_package("Seurat", type = "Imports")
usethis::use_package("matrixStats", type = "Imports")
usethis::use_package("parallel", type = "Imports")
usethis::use_package("scran", type = "Imports")
devtools::document()
devtools::document()
usethis::use_package("devtools", type = "Suggests")
devtools::document()
?devtools::install_github
devtools::load_all()
data("pbmcSmall")
pbmcSmall <- pbmcSmall[rowSums(pbmcSmall != 0) >= 10, ]
print(dim(pbmcSmall))
pbmcSmall_Norm <- Dino(pbmcSmall, nCores = 4)
invisible(capture.output(pbmcSmall_Norm <- Dino(pbmcSmall, nCores = 4)))
pbmcSmall_Seurat <- SeuratFromDino(pbmcSmall_Norm, doNorm = F)
# Cluster pbmcSmall_Seurat
pbmcSmall_Seurat <- FindVariableFeatures(pbmcSmall_Seurat,
selection.method = "mvp",
nfeatures = 1000)
pbmcSmall_Seurat <- ScaleData(pbmcSmall_Seurat,
features = rownames(pbmc3k_Norm))
pbmcSmall_Seurat <- RunPCA(pbmcSmall_Seurat,
features = VariableFeatures(object = pbmcSmall_Seurat),
verbose = F)
pbmcSmall_Seurat <- FindNeighbors(pbmcSmall_Seurat, dims = 1:10)
pbmcSmall_Seurat <- FindClusters(pbmcSmall_Seurat, resolution = 0.5, verbose = F)
pbmcSmall_Seurat <- RunUMAP(pbmcSmall_Seurat, dims = 1:10)
DimPlot(pbmcSmall_Seurat, reduction = "umap")
library(Seurat)
library(Matrix)
pbmcSmall_Seurat <- SeuratFromDino(pbmcSmall_Norm, doNorm = F)
# Cluster pbmcSmall_Seurat
pbmcSmall_Seurat <- FindVariableFeatures(pbmcSmall_Seurat,
selection.method = "mvp",
nfeatures = 1000)
pbmcSmall_Seurat <- ScaleData(pbmcSmall_Seurat,
features = rownames(pbmc3k_Norm))
pbmcSmall_Seurat <- RunPCA(pbmcSmall_Seurat,
features = VariableFeatures(object = pbmcSmall_Seurat),
verbose = F)
pbmcSmall_Seurat <- FindNeighbors(pbmcSmall_Seurat, dims = 1:10)
pbmcSmall_Seurat <- FindClusters(pbmcSmall_Seurat, resolution = 0.5, verbose = F)
pbmcSmall_Seurat <- RunUMAP(pbmcSmall_Seurat, dims = 1:10)
DimPlot(pbmcSmall_Seurat, reduction = "umap")
pbmcSmall_Seurat <- ScaleData(pbmcSmall_Seurat,
features = rownames(pbmcSmall_Norm))
pbmcSmall_Seurat <- RunPCA(pbmcSmall_Seurat,
features = VariableFeatures(object = pbmcSmall_Seurat),
verbose = F)
pbmcSmall_Seurat <- FindNeighbors(pbmcSmall_Seurat, dims = 1:10)
pbmcSmall_Seurat <- FindClusters(pbmcSmall_Seurat, resolution = 0.5, verbose = F)
pbmcSmall_Seurat <- RunUMAP(pbmcSmall_Seurat, dims = 1:10)
DimPlot(pbmcSmall_Seurat, reduction = "umap")
pbmcSmall_Seurat <- FindNeighbors(pbmcSmall_Seurat, dims = 1:5)
pbmcSmall_Seurat <- FindClusters(pbmcSmall_Seurat, resolution = 0.5, verbose = F)
pbmcSmall_Seurat <- RunUMAP(pbmcSmall_Seurat, dims = 1:5)
DimPlot(pbmcSmall_Seurat, reduction = "umap")
devtools::load_all()
data("pbmcSmall")
pbmcSmall <- pbmcSmall[rowSums(pbmcSmall != 0) >= 10, ]
print(dim(pbmcSmall))
invisible(capture.output(pbmcSmall_Norm <- Dino(pbmcSmall, nCores = 4)))
# Reformat normalized expression as a Seurat object
pbmcSmall_Seurat <- SeuratFromDino(pbmcSmall_Norm, doNorm = F)
# Cluster pbmcSmall_Seurat
pbmcSmall_Seurat <- FindVariableFeatures(pbmcSmall_Seurat,
selection.method = "mvp",
nfeatures = 1000)
pbmcSmall_Seurat <- ScaleData(pbmcSmall_Seurat,
features = rownames(pbmcSmall_Norm))
pbmcSmall_Seurat <- RunPCA(pbmcSmall_Seurat,
features = VariableFeatures(object = pbmcSmall_Seurat),
verbose = F)
pbmcSmall_Seurat <- FindNeighbors(pbmcSmall_Seurat, dims = 1:5)
pbmcSmall_Seurat <- FindClusters(pbmcSmall_Seurat, resolution = 0.5, verbose = F)
pbmcSmall_Seurat <- RunUMAP(pbmcSmall_Seurat, dims = 1:5)
DimPlot(pbmcSmall_Seurat, reduction = "umap")
counts <- pbmc3k; rownames(counts) <- NULL
sce <- SingleCellExperiment(list(counts = counts))
sce <- computeSumFactors(sce)
scranSizes <- sizeFactors(sce)
# Re-normalize data
pbmc3k_SNorm <- Dino(pbmc3k, nCores = 4, depth = log(scranSizes))
# Compute scran size factors
counts <- pbmcSmall; rownames(counts) <- NULL
sce <- SingleCellExperiment(list(counts = counts))
sce <- computeSumFactors(sce)
scranSizes <- sizeFactors(sce)
# Re-normalize data
pbmcSmall_SNorm <- Dino(pbmcSmall, nCores = 4, depth = log(scranSizes))
library(scran)
# Compute scran size factors
counts <- pbmcSmall; rownames(counts) <- NULL
sce <- SingleCellExperiment(list(counts = counts))
sce <- computeSumFactors(sce)
scranSizes <- sizeFactors(sce)
# Re-normalize data
pbmcSmall_SNorm <- Dino(pbmcSmall, nCores = 4, depth = log(scranSizes))
pbmcSmall_Seurat <- SeuratFromDino(pbmcSmall_SNorm, doNorm = F)
# Cluster pbmcSmall_Seurat
pbmcSmall_Seurat <- FindVariableFeatures(pbmcSmall_Seurat,
selection.method = "mvp",
nfeatures = 1000)
pbmcSmall_Seurat <- ScaleData(pbmcSmall_Seurat,
features = rownames(pbmcSmall_SNorm))
pbmcSmall_Seurat <- RunPCA(pbmcSmall_Seurat,
features = VariableFeatures(object = pbmcSmall_Seurat),
verbose = F)
pbmcSmall_Seurat <- FindNeighbors(pbmcSmall_Seurat, dims = 1:5)
pbmcSmall_Seurat <- FindClusters(pbmcSmall_Seurat, resolution = 0.5, verbose = F)
pbmcSmall_Seurat <- RunUMAP(pbmcSmall_Seurat, dims = 1:5)
DimPlot(pbmcSmall_Seurat, reduction = "umap")
devtools::load_all()
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d")
?devtools::install_github
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T)
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T, force = T)
vignette()
vignette(package = "Dino")
browseVignettes("Dino")
help(package = 'Dino', help_type = 'html')
?Dino
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T, force = T)
library(Dino)
browseVignettes("Dino")
help(package = 'Dino', help_type = 'html')
?Dino
devtools::build_vignettes()
help(package = 'Dino', help_type = 'html')
browseVignettes("Dino")
?approxfun
approxfun(c(1, 1, 2), c(1, 2, 3))
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T, force = T)
1 / 144 * 1e3
browseVignettes("Dino")
devtools::build_vignettes()
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T, force = T)
library(Dino)
browseVignettes("Dino")
help(package = 'Dino', help_type = 'html')
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T, force = T)
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T, force = T)
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T, force = T)
devtools::install_github('JBrownBiostat/Dino', auth_token = "e1f6d93b59ade518bf6a2dde619ddba86cbfb90d", build_vignettes = T, force = T)
?CreateAssayObject
a <- 1; b <- 2, c <- 3
a <- 1; b <- 2; c <- 3
c / b
a <- 1; b <- -2; c <- -3
-c / b
a <- -1; b <- -2; c <- 3
-c / b
(-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.8 * a
(-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.8 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.8 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.8 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.8 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.8 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.8 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.8 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.85 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.85 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
a <- 0.5 * a
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
library(Dino)
?Dino
